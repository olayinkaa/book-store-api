openapi: 3.0.0
info:
  version: 0.1.9
  title:  Book store
  description: APIs Documentation for book stores
  termOfService: ibrahimolayinkaa@gmail.com
  contact:
    name: Ibrahim Olayinka
    email: ibrahimolayinkaa@gmail.com
servers:
  - url:  http://localhost:12000/api/v1
    description:  Development server
  - url:  https://bookstores.herokuapp.com/api/v1
    description:  Production server
paths:
  /user/register:
    get:
      tags: 
        - UserController
      summary: API endpoint to retrieve register users
      description: Get register users
      operationId: getRegisterUsers
      security:
        - bearerAuth: []
      responses:
        200:
          description: successfully processed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  ######################################################################################
  /user/register:
  /user/login:
    post:
      tags: 
        - UserController
      summary: API endpoint to retrieve access token
      description: POST Authentication for access token
      operationId: getAccessToken
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Authenticate to get access token
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
##################################################################################################
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
        - gender
        - password
        - contactInfo
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        gender:
          type: string
          enum:
            - 'male'
            - 'female'
        password:
          type: string
        contactInfo:
          type: object
          properties:
            address:
              type: string
            phoneNumber:
              type: string
    ###################################################################################### 
    UserRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - gender
        - password
        - contactInfo
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        gender:
          type: string
          enum:
            - 'male'
            - 'female'
        password:
          type: string
        contactInfo:
          type: object
          properties:
            address:
              type: string
            phoneNumber:
              type: string
    UserResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
            format: email
          gender:
            type: string
          contactInfo:
            type: object
            properties:
              address:
                type: string
              phoneNumber:
                type: string
    Genre:
    GenreRequest:
    GenreResponse:
    Book:
    BookRequest:
    BookResponse:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string


security:
  - 